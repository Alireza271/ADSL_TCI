// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:ADSLTCI/Models/bank_redirector_model_entity.dart';
import 'package:ADSLTCI/generated/json/bank_redirector_model_entity_helper.dart';
import 'package:ADSLTCI/Models/traffic_ditails_model_entity.dart';
import 'package:ADSLTCI/generated/json/traffic_ditails_model_entity_helper.dart';
import 'package:ADSLTCI/Models/traffic_model_entity.dart';
import 'package:ADSLTCI/generated/json/traffic_model_entity_helper.dart';
import 'package:ADSLTCI/Models/service_ditails_model_entity.dart';
import 'package:ADSLTCI/generated/json/service_ditails_model_entity_helper.dart';
import 'package:ADSLTCI/Models/service_model_entity.dart';
import 'package:ADSLTCI/generated/json/service_model_entity_helper.dart';
import 'package:ADSLTCI/Models/change_services_model_entity.dart';
import 'package:ADSLTCI/generated/json/change_services_model_entity_helper.dart';
import 'package:ADSLTCI/Models/change_service_ditail_model_entity.dart';
import 'package:ADSLTCI/generated/json/change_service_ditail_model_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BankRedirectorModelEntity:
			return bankRedirectorModelEntityFromJson(data as BankRedirectorModelEntity, json) as T;			case BankRedirectorModelResult:
			return bankRedirectorModelResultFromJson(data as BankRedirectorModelResult, json) as T;			case TrafficDitailsModelEntity:
			return trafficDitailsModelEntityFromJson(data as TrafficDitailsModelEntity, json) as T;			case TrafficDitailsModelResult:
			return trafficDitailsModelResultFromJson(data as TrafficDitailsModelResult, json) as T;			case TrafficDitailsModelResultService:
			return trafficDitailsModelResultServiceFromJson(data as TrafficDitailsModelResultService, json) as T;			case TrafficDitailsModelResultBank:
			return trafficDitailsModelResultBankFromJson(data as TrafficDitailsModelResultBank, json) as T;			case TrafficDitailsModelResultCosts:
			return trafficDitailsModelResultCostsFromJson(data as TrafficDitailsModelResultCosts, json) as T;			case TrafficModelEntity:
			return trafficModelEntityFromJson(data as TrafficModelEntity, json) as T;			case TrafficModelResult:
			return trafficModelResultFromJson(data as TrafficModelResult, json) as T;			case TrafficModelResultList:
			return trafficModelResultListFromJson(data as TrafficModelResultList, json) as T;			case ServiceDitailsModelEntity:
			return serviceDitailsModelEntityFromJson(data as ServiceDitailsModelEntity, json) as T;			case ServiceDitailsModelResult:
			return serviceDitailsModelResultFromJson(data as ServiceDitailsModelResult, json) as T;			case ServiceDitailsModelResultService:
			return serviceDitailsModelResultServiceFromJson(data as ServiceDitailsModelResultService, json) as T;			case ServiceDitailsModelResultBank:
			return serviceDitailsModelResultBankFromJson(data as ServiceDitailsModelResultBank, json) as T;			case ServiceDitailsModelResultCosts:
			return serviceDitailsModelResultCostsFromJson(data as ServiceDitailsModelResultCosts, json) as T;			case ServiceModelEntity:
			return serviceModelEntityFromJson(data as ServiceModelEntity, json) as T;			case ServiceModelResult:
			return serviceModelResultFromJson(data as ServiceModelResult, json) as T;			case ServiceModelResultList:
			return serviceModelResultListFromJson(data as ServiceModelResultList, json) as T;			case ChangeServicesModelEntity:
			return changeServicesModelEntityFromJson(data as ChangeServicesModelEntity, json) as T;			case ChangeServicesModelResult:
			return changeServicesModelResultFromJson(data as ChangeServicesModelResult, json) as T;			case ChangeServicesModelResultList:
			return changeServicesModelResultListFromJson(data as ChangeServicesModelResultList, json) as T;			case ChangeServiceDitailModelEntity:
			return changeServiceDitailModelEntityFromJson(data as ChangeServiceDitailModelEntity, json) as T;			case ChangeServiceDitailModelResult:
			return changeServiceDitailModelResultFromJson(data as ChangeServiceDitailModelResult, json) as T;			case ChangeServiceDitailModelResultService:
			return changeServiceDitailModelResultServiceFromJson(data as ChangeServiceDitailModelResultService, json) as T;			case ChangeServiceDitailModelResultBank:
			return changeServiceDitailModelResultBankFromJson(data as ChangeServiceDitailModelResultBank, json) as T;			case ChangeServiceDitailModelResultCosts:
			return changeServiceDitailModelResultCostsFromJson(data as ChangeServiceDitailModelResultCosts, json) as T;			case ChangeServiceDitailModelResultCostsChangeinfo:
			return changeServiceDitailModelResultCostsChangeinfoFromJson(data as ChangeServiceDitailModelResultCostsChangeinfo, json) as T;			case ChangeServiceDitailModelResultCostsConfirminfo:
			return changeServiceDitailModelResultCostsConfirminfoFromJson(data as ChangeServiceDitailModelResultCostsConfirminfo, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case BankRedirectorModelEntity:
			return bankRedirectorModelEntityToJson(data as BankRedirectorModelEntity);			case BankRedirectorModelResult:
			return bankRedirectorModelResultToJson(data as BankRedirectorModelResult);			case TrafficDitailsModelEntity:
			return trafficDitailsModelEntityToJson(data as TrafficDitailsModelEntity);			case TrafficDitailsModelResult:
			return trafficDitailsModelResultToJson(data as TrafficDitailsModelResult);			case TrafficDitailsModelResultService:
			return trafficDitailsModelResultServiceToJson(data as TrafficDitailsModelResultService);			case TrafficDitailsModelResultBank:
			return trafficDitailsModelResultBankToJson(data as TrafficDitailsModelResultBank);			case TrafficDitailsModelResultCosts:
			return trafficDitailsModelResultCostsToJson(data as TrafficDitailsModelResultCosts);			case TrafficModelEntity:
			return trafficModelEntityToJson(data as TrafficModelEntity);			case TrafficModelResult:
			return trafficModelResultToJson(data as TrafficModelResult);			case TrafficModelResultList:
			return trafficModelResultListToJson(data as TrafficModelResultList);			case ServiceDitailsModelEntity:
			return serviceDitailsModelEntityToJson(data as ServiceDitailsModelEntity);			case ServiceDitailsModelResult:
			return serviceDitailsModelResultToJson(data as ServiceDitailsModelResult);			case ServiceDitailsModelResultService:
			return serviceDitailsModelResultServiceToJson(data as ServiceDitailsModelResultService);			case ServiceDitailsModelResultBank:
			return serviceDitailsModelResultBankToJson(data as ServiceDitailsModelResultBank);			case ServiceDitailsModelResultCosts:
			return serviceDitailsModelResultCostsToJson(data as ServiceDitailsModelResultCosts);			case ServiceModelEntity:
			return serviceModelEntityToJson(data as ServiceModelEntity);			case ServiceModelResult:
			return serviceModelResultToJson(data as ServiceModelResult);			case ServiceModelResultList:
			return serviceModelResultListToJson(data as ServiceModelResultList);			case ChangeServicesModelEntity:
			return changeServicesModelEntityToJson(data as ChangeServicesModelEntity);			case ChangeServicesModelResult:
			return changeServicesModelResultToJson(data as ChangeServicesModelResult);			case ChangeServicesModelResultList:
			return changeServicesModelResultListToJson(data as ChangeServicesModelResultList);			case ChangeServiceDitailModelEntity:
			return changeServiceDitailModelEntityToJson(data as ChangeServiceDitailModelEntity);			case ChangeServiceDitailModelResult:
			return changeServiceDitailModelResultToJson(data as ChangeServiceDitailModelResult);			case ChangeServiceDitailModelResultService:
			return changeServiceDitailModelResultServiceToJson(data as ChangeServiceDitailModelResultService);			case ChangeServiceDitailModelResultBank:
			return changeServiceDitailModelResultBankToJson(data as ChangeServiceDitailModelResultBank);			case ChangeServiceDitailModelResultCosts:
			return changeServiceDitailModelResultCostsToJson(data as ChangeServiceDitailModelResultCosts);			case ChangeServiceDitailModelResultCostsChangeinfo:
			return changeServiceDitailModelResultCostsChangeinfoToJson(data as ChangeServiceDitailModelResultCostsChangeinfo);			case ChangeServiceDitailModelResultCostsConfirminfo:
			return changeServiceDitailModelResultCostsConfirminfoToJson(data as ChangeServiceDitailModelResultCostsConfirminfo);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'BankRedirectorModelEntity':
			return BankRedirectorModelEntity().fromJson(json);			case 'BankRedirectorModelResult':
			return BankRedirectorModelResult().fromJson(json);			case 'TrafficDitailsModelEntity':
			return TrafficDitailsModelEntity().fromJson(json);			case 'TrafficDitailsModelResult':
			return TrafficDitailsModelResult().fromJson(json);			case 'TrafficDitailsModelResultService':
			return TrafficDitailsModelResultService().fromJson(json);			case 'TrafficDitailsModelResultBank':
			return TrafficDitailsModelResultBank().fromJson(json);			case 'TrafficDitailsModelResultCosts':
			return TrafficDitailsModelResultCosts().fromJson(json);			case 'TrafficModelEntity':
			return TrafficModelEntity().fromJson(json);			case 'TrafficModelResult':
			return TrafficModelResult().fromJson(json);			case 'TrafficModelResultList':
			return TrafficModelResultList().fromJson(json);			case 'ServiceDitailsModelEntity':
			return ServiceDitailsModelEntity().fromJson(json);			case 'ServiceDitailsModelResult':
			return ServiceDitailsModelResult().fromJson(json);			case 'ServiceDitailsModelResultService':
			return ServiceDitailsModelResultService().fromJson(json);			case 'ServiceDitailsModelResultBank':
			return ServiceDitailsModelResultBank().fromJson(json);			case 'ServiceDitailsModelResultCosts':
			return ServiceDitailsModelResultCosts().fromJson(json);			case 'ServiceModelEntity':
			return ServiceModelEntity().fromJson(json);			case 'ServiceModelResult':
			return ServiceModelResult().fromJson(json);			case 'ServiceModelResultList':
			return ServiceModelResultList().fromJson(json);			case 'ChangeServicesModelEntity':
			return ChangeServicesModelEntity().fromJson(json);			case 'ChangeServicesModelResult':
			return ChangeServicesModelResult().fromJson(json);			case 'ChangeServicesModelResultList':
			return ChangeServicesModelResultList().fromJson(json);			case 'ChangeServiceDitailModelEntity':
			return ChangeServiceDitailModelEntity().fromJson(json);			case 'ChangeServiceDitailModelResult':
			return ChangeServiceDitailModelResult().fromJson(json);			case 'ChangeServiceDitailModelResultService':
			return ChangeServiceDitailModelResultService().fromJson(json);			case 'ChangeServiceDitailModelResultBank':
			return ChangeServiceDitailModelResultBank().fromJson(json);			case 'ChangeServiceDitailModelResultCosts':
			return ChangeServiceDitailModelResultCosts().fromJson(json);			case 'ChangeServiceDitailModelResultCostsChangeinfo':
			return ChangeServiceDitailModelResultCostsChangeinfo().fromJson(json);			case 'ChangeServiceDitailModelResultCostsConfirminfo':
			return ChangeServiceDitailModelResultCostsConfirminfo().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'BankRedirectorModelEntity':
			return List<BankRedirectorModelEntity>();			case 'BankRedirectorModelResult':
			return List<BankRedirectorModelResult>();			case 'TrafficDitailsModelEntity':
			return List<TrafficDitailsModelEntity>();			case 'TrafficDitailsModelResult':
			return List<TrafficDitailsModelResult>();			case 'TrafficDitailsModelResultService':
			return List<TrafficDitailsModelResultService>();			case 'TrafficDitailsModelResultBank':
			return List<TrafficDitailsModelResultBank>();			case 'TrafficDitailsModelResultCosts':
			return List<TrafficDitailsModelResultCosts>();			case 'TrafficModelEntity':
			return List<TrafficModelEntity>();			case 'TrafficModelResult':
			return List<TrafficModelResult>();			case 'TrafficModelResultList':
			return List<TrafficModelResultList>();			case 'ServiceDitailsModelEntity':
			return List<ServiceDitailsModelEntity>();			case 'ServiceDitailsModelResult':
			return List<ServiceDitailsModelResult>();			case 'ServiceDitailsModelResultService':
			return List<ServiceDitailsModelResultService>();			case 'ServiceDitailsModelResultBank':
			return List<ServiceDitailsModelResultBank>();			case 'ServiceDitailsModelResultCosts':
			return List<ServiceDitailsModelResultCosts>();			case 'ServiceModelEntity':
			return List<ServiceModelEntity>();			case 'ServiceModelResult':
			return List<ServiceModelResult>();			case 'ServiceModelResultList':
			return List<ServiceModelResultList>();			case 'ChangeServicesModelEntity':
			return List<ChangeServicesModelEntity>();			case 'ChangeServicesModelResult':
			return List<ChangeServicesModelResult>();			case 'ChangeServicesModelResultList':
			return List<ChangeServicesModelResultList>();			case 'ChangeServiceDitailModelEntity':
			return List<ChangeServiceDitailModelEntity>();			case 'ChangeServiceDitailModelResult':
			return List<ChangeServiceDitailModelResult>();			case 'ChangeServiceDitailModelResultService':
			return List<ChangeServiceDitailModelResultService>();			case 'ChangeServiceDitailModelResultBank':
			return List<ChangeServiceDitailModelResultBank>();			case 'ChangeServiceDitailModelResultCosts':
			return List<ChangeServiceDitailModelResultCosts>();			case 'ChangeServiceDitailModelResultCostsChangeinfo':
			return List<ChangeServiceDitailModelResultCostsChangeinfo>();			case 'ChangeServiceDitailModelResultCostsConfirminfo':
			return List<ChangeServiceDitailModelResultCostsConfirminfo>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}